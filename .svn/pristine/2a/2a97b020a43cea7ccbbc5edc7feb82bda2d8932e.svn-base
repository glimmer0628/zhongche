<template>
  <div class="bindingPage">
    <div class="titleContainer">
      <div class="avatarContainer">
        <img src="https://dummyimage.com/74x74" class="avatar">
      </div>
    </div>
    <ul class="bindingUl" v-if="!binded">
      <li class="bindingLi">
        <input-item :place-text="'请输入工号'" :type="'workNum'"></input-item>
      </li>
      <li class="bindingLi">
        <input-item :place-text="'请输入手机号'" :type="'phoneNum'"></input-item>
      </li>
      <li class="bindingLi getNumBox">
        <input-item :place-text="'请输入验证码'" :type="'verify'"></input-item>
        <div class="getNum">
          <verify-num :phone-num="phoneNum"></verify-num>
        </div>
      </li>
    </ul>
    <ul class="bindingUl" v-if="binded">
      <li class="bindingLi">
        <input-item :text="group" :title="'工会'"></input-item>
      </li>
      <li class="bindingLi">
        <input-item :text="phoneNum" :title="'手机号'"></input-item>
      </li>
      <li class="bindingLi">
        <input-item :text="'昵称昵称'" :title="'昵称'"></input-item>
      </li>
    </ul>
    <div class="submitBtnContainer">
      <div class="submitBtn" @click="submit()">确定</div>
    </div>
    <div class="loading" v-show="loading">
      <img src="timg.gif" height="80" width="80">
    </div>
  </div>
</template>
<script>
  import inputItem from '../../components/InputItem/InputItem.vue';
  import verifyNum from '../../components/VerifyNum/VerifyNum.vue';
  export default {
    data () {
      return {
        phoneNum: '',
        workNum: '',
        verify: '',
        binded: false,
        group: '',
        loading: false
      };
    },
    vuex: {
      getters: {
        prefix: ({ user }) => user.prefix,
        openid: ({ user }) => user.userInfo.openid
      }
    },
    components: {
      inputItem,
      verifyNum
    },
    methods: {
      submit () {
        if (this.binded) {
          this.$router.go('/my');
        } else {
          let phoneReg = new RegExp('^1(3|4|5|7|8)\\d{9}$');
          let verifyReg = new RegExp('^\\d{6}$');
          if (phoneReg.test(this.phoneNum)) {
            if (verifyReg.test(this.verify)) {
              if (this.workNum) {
                this.loading = true;
                let options = {
                  openid: this.openid,
                  phoneNum: this.phoneNum,
                  verify: this.verify,
                  workNum: this.workNum
                };
                console.log(options);
                this.$http.get(this.prefix + '/reqbind', options)
                .then(res => {
                  this.loading = false;
                  switch (res.body.resData.result_msg) {
                    case 0:
                      this.$toast.success('绑定成功');
                      setTimeout(() => {
                        this.$router.go('/binding');
                      }, 2000);
                      break;
                    case 1:
                      this.$toast.error('该手机号已被绑定');
                      break;
                    case 2:
                      this.$toast.error('该工号已被绑定');
                      break;
                    case 3:
                      this.$toast.error('验证码错误');
                  };
                });
              } else {
                this.$toast.error('工号不能为空');
              }
            } else {
              this.$toast.error('验证码格式不正确');
            }
          } else {
            this.$toast.error('请输入正确的手机号');
          };
        }
      }
    },
    created () {
      this.$toast.config({
        position: 'bottom center',
        duration: 1500
      });
      this.$http.get(this.prefix + '/getbinding', {openid: this.openid})
      .then(res => {
        this.binded = res.body.resData.binded;
        this.phoneNum = res.body.resData.info.phoneNum;
        this.group = res.body.resData.info.group;
      });

      this.$on('workNum', (text) => {
        this.workNum = text;
      });
      this.$on('phoneNum', (text) => {
        this.phoneNum = text;
      });
      this.$on('verify', (text) => {
        this.verify = text;
      });
      this.$on('loading', () => {
        this.loading = true;
      });
      this.$on('loaded', () => {
        this.loading = false;
      });
    }
  };
</script>
<style lang="stylus">
  @import '../../../static/css/border-1px.styl'
  .bindingPage
    position: absolute
    top: 0
    left: 0
    width: 100%
    height: 100%
    background-color: #FFF
    .titleContainer
      display: flex
      justify-content: center
      margin-top: 30px
      margin-bottom: 35px
      font-size: 0
      text-align: center
      .avatar
        margin-bottom: 12px
        border-radius: 50%
    .bindingUl
      display: flex
      justify-content: center
      flex-wrap: wrap
      margin: 0
      padding: 0
      .bindingLi
        width: 275px
        list-style: none
        border-1px-bot('#e6e7eb')
        &.getNumBox
          position: relative
          .getNum
            position: absolute
            top: 50%
            margin-top: -15px
            right: 0
    .submitBtnContainer
      display: flex
      justify-content: center
      align-items: center
      height: 91px
      .submitBtn
        display: flex
        justify-content: center
        align-items: center
        box-sizing: border-box
        width: 275px
        height: 44px
        border-radius: 22px
        border: none
        color: #fff
        background: linear-gradient(90deg, #fc556b, #ef2f48)
        box-shadow: 0 1px 8px rgba(246, 67, 91, 0.6)
</style>